{"ast":null,"code":"import _defineProperty from \"C:/Users/Vaibhavi/Desktop/get-weather-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/Vaibhavi/Desktop/get-weather-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/Vaibhavi/Desktop/get-weather-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Vaibhavi/Desktop/get-weather-master/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"C:/Users/Vaibhavi/Desktop/get-weather-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"theme\", \"type\"],\n  _excluded2 = [\"delay\", \"staleId\"];\nimport React, { isValidElement, useRef, useLayoutEffect, useEffect, cloneElement, useReducer, useState, forwardRef } from 'react';\nimport cx from 'clsx';\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isStr(v) {\n  return typeof v === 'string';\n}\nfunction isFn(v) {\n  return typeof v === 'function';\n}\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\nfunction isToastIdValid(toastId) {\n  return toastId != null;\n}\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\n/**\r\n * Used to collapse toast after exit animation\r\n */\nfunction collapseToast(node, done, duration\n/* Default.COLLAPSE_DURATION */) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n  var scrollHeight = node.scrollHeight,\n    style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration);\n    });\n  });\n}\n\n/**\r\n * Css animation that just work.\r\n * You could use animate.css for instance\r\n *\r\n *\r\n * ```\r\n * cssTransition({\r\n *   enter: \"animate__animated animate__bounceIn\",\r\n *   exit: \"animate__animated animate__bounceOut\"\r\n * })\r\n * ```\r\n *\r\n */\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n    exit = _ref.exit,\n    _ref$appendPosition = _ref.appendPosition,\n    appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n    _ref$collapse = _ref.collapse,\n    collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n    _ref$collapseDuration = _ref.collapseDuration,\n    collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n      position = _ref2.position,\n      preventExitTransition = _ref2.preventExitTransition,\n      done = _ref2.done,\n      nodeRef = _ref2.nodeRef,\n      isIn = _ref2.isIn;\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    var animationStep = useRef(0\n    /* AnimationStep.Enter */);\n\n    useLayoutEffect(function () {\n      var node = nodeRef.current;\n      var classToToken = enterClassName.split(' ');\n      var onEntered = function onEntered(e) {\n        if (e.target !== nodeRef.current) return;\n        node.dispatchEvent(new Event(\"d\"\n        /* SyntheticEvent.ENTRANCE_ANIMATION_END */));\n\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n        if (animationStep.current === 0\n        /* AnimationStep.Enter */ && e.type !== 'animationcancel') {\n          var _node$classList;\n          (_node$classList = node.classList).remove.apply(_node$classList, _toConsumableArray(classToToken));\n        }\n      };\n      var onEnter = function onEnter() {\n        var _node$classList2;\n        (_node$classList2 = node.classList).add.apply(_node$classList2, _toConsumableArray(classToToken));\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n      onEnter();\n    }, []);\n    useEffect(function () {\n      var node = nodeRef.current;\n      var onExited = function onExited() {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n      var onExit = function onExit() {\n        animationStep.current = 1\n        /* AnimationStep.Exit */;\n\n        node.className += \" \" + exitClassName;\n        node.addEventListener('animationend', onExited);\n      };\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n    return React.createElement(React.Fragment, null, children);\n  };\n}\nfunction toToastItem(toast, status) {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status: status\n  };\n}\nvar eventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n    return this;\n  },\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _arguments = arguments,\n      _this = this;\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, _toConsumableArray([].slice.call(_arguments, 1)));\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\nvar Svg = function Svg(_ref) {\n  var theme = _ref.theme,\n    type = _ref.type,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(\"svg\", _objectSpread({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: theme === 'colored' ? 'currentColor' : \"var(--toastify-icon-color-\" + type + \")\"\n  }, rest));\n};\nfunction Warning(props) {\n  return React.createElement(Svg, _objectSpread({}, props), React.createElement(\"path\", {\n    d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n  }));\n}\nfunction Info(props) {\n  return React.createElement(Svg, _objectSpread({}, props), React.createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n  }));\n}\nfunction Success(props) {\n  return React.createElement(Svg, _objectSpread({}, props), React.createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n  }));\n}\nfunction Error(props) {\n  return React.createElement(Svg, _objectSpread({}, props), React.createElement(\"path\", {\n    d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n  }));\n}\nfunction Spinner() {\n  return React.createElement(\"div\", {\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__spinner\"\n  });\n}\nvar Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\nvar maybeIcon = function maybeIcon(type) {\n  return type in Icons;\n};\nfunction getIcon(_ref2) {\n  var theme = _ref2.theme,\n    type = _ref2.type,\n    isLoading = _ref2.isLoading,\n    icon = _ref2.icon;\n  var Icon = null;\n  var iconProps = {\n    theme: theme,\n    type: type\n  };\n  if (icon === false) ;else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n  return Icon;\n}\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    forceUpdate = _useReducer2[1];\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    toastIds = _useState2[0],\n    setToastIds = _useState2[1];\n  var containerRef = useRef(null);\n  var toastToRender = useRef(new Map()).current;\n  var isToastActive = function isToastActive(id) {\n    return toastIds.indexOf(id) !== -1;\n  };\n  var instance = useRef({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return toastToRender.get(id);\n    }\n  }).current;\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* Event.WillUnmount */).on(0\n    /* Event.Show */, buildToast).on(1\n    /* Event.Clear */, function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* Event.ClearWaitingQueue */, clearWaitingQueue).emit(2\n    /* Event.DidMount */, instance);\n    return function () {\n      toastToRender.clear();\n      eventManager.emit(3\n      /* Event.WillUnmount */, instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var limit = instance.props.limit;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n  function removeToast(toastId) {\n    setToastIds(function (state) {\n      return isToastIdValid(toastId) ? state.filter(function (id) {\n        return id !== toastId;\n      }) : [];\n    });\n  }\n  function dequeueToast() {\n    var _instance$queue$shift = instance.queue.shift(),\n      toastContent = _instance$queue$shift.toastContent,\n      toastProps = _instance$queue$shift.toastProps,\n      staleId = _instance$queue$shift.staleId;\n    appendToast(toastContent, toastProps, staleId);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n  function isNotValid(options) {\n    return !containerRef.current || instance.props.enableMultiContainer && options.containerId !== instance.props.containerId || toastToRender.has(options.toastId) && options.updateId == null;\n  } // this function and all the function called inside needs to rely on refs\n\n  function buildToast(content, _ref2) {\n    var delay = _ref2.delay,\n      staleId = _ref2.staleId,\n      options = _objectWithoutProperties(_ref2, _excluded2);\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n      updateId = options.updateId,\n      data = options.data;\n    var props = instance.props;\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n    var isNotAnUpdate = updateId == null;\n    if (isNotAnUpdate) instance.count++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      data: data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: options.draggablePercent || props.draggablePercent,\n      draggableDirection: options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading ? false : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast: function deleteToast() {\n        var removed = toToastItem(toastToRender.get(toastId), 'removed');\n        toastToRender.delete(toastId);\n        eventManager.emit(4\n        /* Event.Change */, removed);\n        var queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId) ? instance.count - 1 : instance.count - instance.displayedToast;\n        if (instance.count < 0) instance.count = 0;\n        if (queueLen > 0) {\n          var freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n            for (var i = 0; i < toDequeue; i++) {\n              dequeueToast();\n            }\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n    toastProps.iconOut = getIcon(toastProps);\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    toastProps.closeButton = props.closeButton;\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n    var toastContent = content;\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n    if (props.limit && props.limit > 0 && instance.count > props.limit && isNotAnUpdate) {\n      instance.queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay)) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    if (staleId) toastToRender.delete(staleId);\n    var toast = {\n      content: content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n    setToastIds(function (state) {\n      return [].concat(_toConsumableArray(state), [toastId]).filter(function (id) {\n        return id !== staleId;\n      });\n    });\n    eventManager.emit(4\n    /* Event.Change */, toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated'));\n  }\n  function getToastToRender(cb) {\n    var toRender = new Map();\n    var collection = Array.from(toastToRender.values());\n    if (props.newestOnTop) collection.reverse();\n    collection.forEach(function (toast) {\n      var position = toast.props.position;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position).push(toast);\n    });\n    return Array.from(toRender, function (p) {\n      return cb(p[0], p[1]);\n    });\n  }\n  return {\n    getToastToRender: getToastToRender,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\nfunction useToast(props) {\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isRunning = _useState4[0],\n    setIsRunning = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    preventExitTransition = _useState6[0],\n    setPreventExitTransition = _useState6[1];\n  var toastRef = useRef(null);\n  var drag = useRef({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  var syncProps = useRef(props);\n  var autoClose = props.autoClose,\n    pauseOnHover = props.pauseOnHover,\n    closeToast = props.closeToast,\n    onClick = props.onClick,\n    closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    syncProps.current = props;\n  });\n  useEffect(function () {\n    if (toastRef.current) toastRef.current.addEventListener(\"d\"\n    /* SyntheticEvent.ENTRANCE_ANIMATION_END */, playToast, {\n      once: true\n    });\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      var props = syncProps.current;\n      if (isFn(props.onClose)) props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n  function onDragStart(e) {\n    if (props.draggable) {\n      bindDragEvents();\n      var _toast = toastRef.current;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = _toast.getBoundingClientRect();\n      _toast.style.transition = '';\n      drag.x = getX(e.nativeEvent);\n      drag.y = getY(e.nativeEvent);\n      if (props.draggableDirection === \"x\"\n      /* Direction.X */) {\n        drag.start = drag.x;\n        drag.removalDistance = _toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance = _toast.offsetHeight * (props.draggablePercent === 80\n        /* Default.DRAGGABLE_PERCENT */ ? props.draggablePercent * 1.5 : props.draggablePercent / 100);\n      }\n    }\n  }\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n        top = _drag$boundingRect.top,\n        bottom = _drag$boundingRect.bottom,\n        left = _drag$boundingRect.left,\n        right = _drag$boundingRect.right;\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n  function playToast() {\n    setIsRunning(true);\n  }\n  function pauseToast() {\n    setIsRunning(false);\n  }\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n  function onDragMove(e) {\n    var toast = toastRef.current;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.y = getY(e);\n      if (props.draggableDirection === \"x\"\n      /* Direction.X */) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      } // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(\" + drag.delta + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.delta / drag.removalDistance));\n    }\n  }\n  function onDragEnd() {\n    unbindDragEvents();\n    var toast = toastRef.current;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(0)\";\n      toast.style.opacity = '1';\n    }\n  }\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n    theme = _ref.theme,\n    _ref$ariaLabel = _ref.ariaLabel,\n    ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return React.createElement(\"button\", {\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__close-button \" + \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__close-button--\" + theme,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\nfunction ProgressBar(_ref) {\n  var delay = _ref.delay,\n    isRunning = _ref.isRunning,\n    closeToast = _ref.closeToast,\n    type = _ref.type,\n    hide = _ref.hide,\n    className = _ref.className,\n    userStyle = _ref.style,\n    controlledProgress = _ref.controlledProgress,\n    progress = _ref.progress,\n    rtl = _ref.rtl,\n    isIn = _ref.isIn,\n    theme = _ref.theme;\n  var style = _objectSpread(_objectSpread({}, userStyle), {}, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var defaultClassName = cx(\"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar--controlled\" : \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar--animated\", \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar-theme--\" + theme, \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar--\" + type, _defineProperty({}, \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar--rtl\", rtl));\n  var classNames = isFn(className) ? className({\n    rtl: rtl,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = _defineProperty({}, controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd', controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }); // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return React.createElement(\"div\", _objectSpread({\n    role: \"progressbar\",\n    \"aria-hidden\": hide ? 'true' : 'false',\n    \"aria-label\": \"notification timer\",\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\nvar Toast = function Toast(props) {\n  var _useToast = useToast(props),\n    isRunning = _useToast.isRunning,\n    preventExitTransition = _useToast.preventExitTransition,\n    toastRef = _useToast.toastRef,\n    eventHandlers = _useToast.eventHandlers;\n  var closeButton = props.closeButton,\n    children = props.children,\n    autoClose = props.autoClose,\n    onClick = props.onClick,\n    type = props.type,\n    hideProgressBar = props.hideProgressBar,\n    closeToast = props.closeToast,\n    Transition = props.transition,\n    position = props.position,\n    className = props.className,\n    style = props.style,\n    bodyClassName = props.bodyClassName,\n    bodyStyle = props.bodyStyle,\n    progressClassName = props.progressClassName,\n    progressStyle = props.progressStyle,\n    updateId = props.updateId,\n    role = props.role,\n    progress = props.progress,\n    rtl = props.rtl,\n    toastId = props.toastId,\n    deleteToast = props.deleteToast,\n    isIn = props.isIn,\n    isLoading = props.isLoading,\n    iconOut = props.iconOut,\n    theme = props.theme;\n  var defaultClassName = cx(\"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__toast\", \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__toast-theme--\" + theme, \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__toast--\" + type, _defineProperty({}, \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__toast--rtl\", rtl));\n  var cssClasses = isFn(className) ? className({\n    rtl: rtl,\n    position: position,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className);\n  var isProgressControlled = !!progress;\n  var closeButtonProps = {\n    closeToast: closeToast,\n    type: type,\n    theme: theme\n  };\n  var Close = null;\n  if (closeButton === false) ;else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n  return React.createElement(Transition, {\n    isIn: isIn,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, React.createElement(\"div\", _objectSpread(_objectSpread({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers), {}, {\n    style: style,\n    ref: toastRef\n  }), React.createElement(\"div\", _objectSpread(_objectSpread({}, isIn && {\n    role: role\n  }), {}, {\n    className: isFn(bodyClassName) ? bodyClassName({\n      type: type\n    }) : cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), iconOut != null && React.createElement(\"div\", {\n    className: cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-icon\", _defineProperty({}, \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"--animate-icon \" + \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__zoom-enter\", !isLoading))\n  }, iconOut), React.createElement(\"div\", null, children)), Close, (autoClose || isProgressControlled) && React.createElement(ProgressBar, _objectSpread(_objectSpread({}, updateId && !isProgressControlled ? {\n    key: \"pb-\" + updateId\n  } : {}), {}, {\n    rtl: rtl,\n    theme: theme,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: isIn,\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: isProgressControlled,\n    progress: progress\n  }))));\n};\nvar Bounce = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__slide-exit\",\n  appendPosition: true\n});\nvar Zoom = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__zoom-exit\"\n});\nvar Flip = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__flip-exit\"\n});\n\n// https://github.com/yannickcr/eslint-plugin-react/issues/3140\nvar ToastContainer = forwardRef(function (props, ref) {\n  var _useToastContainer = useToastContainer(props),\n    getToastToRender = _useToastContainer.getToastToRender,\n    containerRef = _useToastContainer.containerRef,\n    isToastActive = _useToastContainer.isToastActive;\n  var className = props.className,\n    style = props.style,\n    rtl = props.rtl,\n    containerId = props.containerId;\n  function getClassName(position) {\n    var defaultClassName = cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-container\", \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-container--\" + position, _defineProperty({}, \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-container--rtl\", rtl));\n    return isFn(className) ? className({\n      position: position,\n      rtl: rtl,\n      defaultClassName: defaultClassName\n    }) : cx(defaultClassName, parseClassName(className));\n  }\n  useEffect(function () {\n    if (ref) {\n      ref.current = containerRef.current;\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */,\n\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var containerStyle = !toastList.length ? _objectSpread(_objectSpread({}, style), {}, {\n      pointerEvents: 'none'\n    }) : _objectSpread({}, style);\n    return React.createElement(\"div\", {\n      className: getClassName(position),\n      style: containerStyle,\n      key: \"container-\" + position\n    }, toastList.map(function (_ref, i) {\n      var content = _ref.content,\n        toastProps = _ref.props;\n      return React.createElement(Toast, _objectSpread(_objectSpread({}, toastProps), {}, {\n        isIn: isToastActive(toastProps.toastId),\n        style: _objectSpread(_objectSpread({}, toastProps.style), {}, {\n          '--nth': i + 1,\n          '--len': toastList.length\n        }),\n        key: \"toast-\" + toastProps.key\n      }), content);\n    }));\n  }));\n});\nToastContainer.displayName = 'ToastContainer';\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80\n  /* Default.DRAGGABLE_PERCENT */,\n\n  draggableDirection: \"x\"\n  /* Direction.X */,\n\n  role: 'alert',\n  theme: 'light'\n};\nvar containers = new Map();\nvar latestInstance;\nvar queue = [];\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\nfunction dispatchToast(content, options) {\n  if (containers.size > 0) {\n    eventManager.emit(0\n    /* Event.Show */, content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n  }\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\nfunction mergeOptions(type, options) {\n  return _objectSpread(_objectSpread({}, options), {}, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\nfunction createToastByType(type) {\n  return function (content, options) {\n    return dispatchToast(content, mergeOptions(type, options));\n  };\n}\nfunction toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\ntoast.loading = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _objectSpread({\n    isLoading: true,\n    autoClose: false,\n    closeOnClick: false,\n    closeButton: false,\n    draggable: false\n  }, options)));\n};\nfunction handlePromise(promise, _ref2, options) {\n  var pending = _ref2.pending,\n    error = _ref2.error,\n    success = _ref2.success;\n  var id;\n  if (pending) {\n    id = isStr(pending) ? toast.loading(pending, options) : toast.loading(pending.render, _objectSpread(_objectSpread({}, options), pending));\n  }\n  var resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n  var resolver = function resolver(type, input, result) {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n    var baseParams = _objectSpread(_objectSpread(_objectSpread({\n      type: type\n    }, resetParams), options), {}, {\n      data: result\n    });\n    var params = isStr(input) ? {\n      render: input\n    } : input; // if the id is set we know that it's an update\n\n    if (id) {\n      toast.update(id, _objectSpread(_objectSpread({}, baseParams), params));\n    } else {\n      // using toast.promise without loading\n      toast(params.render, _objectSpread(_objectSpread({}, baseParams), params));\n    }\n    return result;\n  };\n  var p = isFn(promise) ? promise() : promise; //call the resolvers only when needed\n\n  p.then(function (result) {\n    return resolver('success', success, result);\n  }).catch(function (err) {\n    return resolver('error', error, err);\n  });\n  return p;\n}\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _objectSpread({\n    theme: 'dark'\n  }, options)));\n};\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  if (containers.size > 0) {\n    eventManager.emit(1\n    /* Event.Clear */, id);\n  } else {\n    queue = queue.filter(function (t) {\n      return isToastIdValid(id) && t.options.toastId !== id;\n    });\n  }\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return eventManager.emit(5\n  /* Event.ClearWaitingQueue */, params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n    if (toast) {\n      var oldOptions = toast.props,\n        oldContent = toast.content;\n      var nextOptions = _objectSpread(_objectSpread(_objectSpread({}, oldOptions), options), {}, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Subscribe to change when a toast is added, removed and updated\r\n *\r\n * Usage:\r\n * ```\r\n * const unsubscribe = toast.onChange((payload) => {\r\n *   switch (payload.status) {\r\n *   case \"added\":\r\n *     // new toast added\r\n *     break;\r\n *   case \"updated\":\r\n *     // toast updated\r\n *     break;\r\n *   case \"removed\":\r\n *     // toast has been removed\r\n *     break;\r\n *   }\r\n * })\r\n * ```\r\n */\n\ntoast.onChange = function (callback) {\n  eventManager.on(4\n  /* Event.Change */, callback);\n  return function () {\n    eventManager.off(4\n    /* Event.Change */, callback);\n  };\n};\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* Event.DidMount */, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Event.Show */, item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* Event.WillUnmount */, function (containerInstance) {\n  containers.delete(containerInstance.containerId || containerInstance);\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Event.Show */).off(1\n    /* Event.Clear */).off(5\n    /* Event.ClearWaitingQueue */);\n  }\n});\n\nexport { Bounce, Flip, Icons, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","ToastTransition","children","position","preventExitTransition","nodeRef","isIn","_ref2","enterClassName","exitClassName","animationStep","useRef","useLayoutEffect","current","classToToken","split","onEntered","e","target","dispatchEvent","Event","removeEventListener","type","classList","remove","onEnter","add","addEventListener","useEffect","onExited","onExit","className","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","Svg","_ref","rest","viewBox","width","fill","Warning","d","Info","Success","Error","Spinner","Icons","info","warning","success","error","spinner","maybeIcon","getIcon","Icon","iconProps","cloneElement","useToastContainer","useReducer","x","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","buildToast","removeToast","clearWaitingQueue","clear","length","limit","state","dequeueToast","shift","toastContent","toastProps","staleId","appendToast","isNotValid","options","enableMultiContainer","updateId","delay","closeToast","isNotAnUpdate","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","iconOut","onOpen","onClose","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","playToast","once","bindFocusEvents","unbindFocusEvents","onDragStart","bindDragEvents","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","document","hasFocus","window","onDragMove","onDragEnd","unbindDragEvents","transform","opacity","Math","abs","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","animationEvent","defaultProps","Toast","Transition","cssClasses","isProgressControlled","closeButtonProps","Close","ref","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","containers","latestInstance","container","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","handlePromise","promise","pending","render","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","catch","err","warn","dark","t","isActive","oldOptions","oldContent","nextOptions","onChange","containerInstance","item"],"sources":["C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\utils\\propValidator.ts","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\utils\\constant.ts","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\utils\\collapseToast.ts","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\utils\\cssTransition.tsx","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\utils\\mapper.ts","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\core\\eventManager.ts","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\components\\Icons.tsx","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\hooks\\useToastContainer.ts","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\hooks\\useToast.ts","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\components\\CloseButton.tsx","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\components\\ProgressBar.tsx","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\components\\Toast.tsx","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\components\\Transitions.tsx","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\components\\ToastContainer.tsx","C:\\Users\\Vaibhavi\\Desktop\\get-weather-master\\node_modules\\react-toastify\\src\\core\\toast.ts"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId != null;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      const node = nodeRef.current!;\n      const classToToken = enterClassName.split(' ');\n\n      const onEntered = (e: AnimationEvent) => {\n        if (e.target !== nodeRef.current) return;\n\n        node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n        if (\n          animationStep.current === AnimationStep.Enter &&\n          e.type !== 'animationcancel'\n        ) {\n          node.classList.remove(...classToToken);\n        }\n      };\n\n      const onEnter = () => {\n        node.classList.add(...classToToken);\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      const node = nodeRef.current!;\n\n      const onExited = () => {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n\n      const onExit = () => {\n        animationStep.current = AnimationStep.Exit;\n        node.className += ` ${exitClassName}`;\n        node.addEventListener('animationend', onExited);\n      };\n\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n      return () => {\n        toastToRender.clear();\n        eventManager.emit(Event.WillUnmount, instance);\n      };\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {Close}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn, isToastIdValid } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Clear, id);\n  } else {\n    queue = queue.filter(t => isToastIdValid(id) && t.options.toastId !== id);\n  }\n};\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}